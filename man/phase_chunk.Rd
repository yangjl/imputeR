% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/PhaseParent.R
\name{phase_chunk}
\alias{infer_dip}
\alias{jump_win}
\alias{maxlog_hap_ockid}
\alias{maxlog_hap_selfed_kid}
\alias{phase_chunk}
\alias{sum_max_log_1hap}
\title{\code{Phasing haplotype chunks. }}
\usage{
phase_chunk(GBS.array, win_length, haps, verbose)

infer_dip(GBS.array, winidx, haps, returnhap = FALSE)

sum_max_log_1hap(GBS.array, winidx, dad_hap = haps[[a]])

maxlog_hap_ockid(dad_hap, mom_geno, mom_haps, kid_geno)

maxlog_hap_selfed_kid(haplotype, kid_geno)

jump_win(GBS.array, winstart, win_length, hetsites, haps)
}
\arguments{
\item{GBS.array}{A GBS.array object generated from \code{impute_parent} or\code{sim.array} functions.}

\item{win_length}{A list of vectors of Kid's GBS data. Coded with 0, 1 and 2, which is the copy of alternative alleles.
Missing data should be coded with 3.}

\item{haps}{all possible haplotypes (2^(win_length-1)) for a given window length.}

\item{verbose}{Writing verbose messages. Default=TRUE.}
}
\value{
return A list of haplotype chunks.
}
\description{
Phasing Parent's haplotypes using sliding window.
These sliding windows were merged into a chunk if there is no conflict. Otherwise, they will be
assigned into different chunks.
}
\examples{
GBS.array <- sim.array(size.array=50, numloci=1000)
win_length = 10
haps <- setup_haps(win_length)
probs <- error_mx(hom.error=0.02, het.error=0.8, imiss=0.2)
chunklist <- phase_chunk(GBS.array, win_length, haps, verbose=TRUE)
}

